@using EPiServer.Commerce.Catalog.ContentTypes
@using EPiServer.Framework.Web.Mvc.Html
@using Foundation.CustomContentDelivery
@using Foundation.Features.Preview
@using Microsoft.OData.Edm
@model IContentViewModel<IContent>
@inject Foundation.Features.Header.IHeaderViewModelFactory factory

@{
    Layout = "~/Features/Shared/Views/_MasterLayout.cshtml";
}

@await Html.RenderEPiServerQuickNavigatorAsync()

@{
    var foundationPageData = Model.CurrentContent as IFoundationContent;
}

@if (!foundationPageData?.HideSiteHeader ?? false)
{
    await Html.RenderPartialAsync("_Header", factory.CreateHeaderViewModel(Model.CurrentContent, Model.StartPage));
}
else
{
    await Html.RenderPartialAsync("_HeaderLogo", factory.CreateHeaderLogoViewModel());
}

<div class="container">
    @RenderBody()


    @*react area*@
    <h2>By React</h2>
    @section AdditionalStyles {
        <link rel="stylesheet" href="@FEExtension.GetCssMainFile()" />
    }
        <div id="root"></div>
        <script>
            window["contentDeliveryReact"] = JSON.parse(`@Html.Raw(FEExtension.GetReactAdditionalData(Model))`);
        </script>
        <script src="@FEExtension.GetJsMainFile()" "></script>

    @*end react area*@
</div>

@if (!foundationPageData?.HideSiteFooter ?? false)
{
    await Html.RenderPartialAsync("_Footer", Html.GetLayoutSettings());
}

@await Html.PartialAsync("_QuickViewModal")

<script src="~/js/main.min.js"></script>

        @RenderSection("AdditionalScripts", required: false)
        @Html.RequiredClientResources("Footer")
        @Html.RenderFooterScripts(Model.CurrentContent)
        @if (Model.CurrentContent is EntryContentBase || Model.CurrentContent is CatalogContentBase)
    {
        @Html.RenderFooterScriptsForCommerce(Model.CurrentContent)
    }
    @Model.SchemaMarkup