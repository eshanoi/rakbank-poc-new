{"version":3,"sources":["HOCs/property-for-component.tsx","blocks/HeroBlock/hero-block.tsx","HOCs/editattribute-component.tsx"],"names":["PropertyFor","keyName","property","isInEditMode","window","isEditMode","type","childrenElement","renderContentArea","propertyBlock","renderComponentData","dangerouslySetInnerHTML","__html","value","className","renderProperty","propertyDataType","HeroBlock","props","hero","state","callout","style","justifyContent","calloutPosition","padding","margin","color","calloutTextColor","textAlign","calloutContentAlignment","videoData","autoPlay","loop","playsInline","muted","src","url","this","mainBackgroundVideo","backgroundImage","paddingBottom","ref","e","element","setAttribute","_renderVideo","_renderCallout","Component"],"mappings":"mHAEA,qDAKe,SAASA,EAAYC,EAAiBC,GACjD,IAAKD,IAAYC,EACb,OAAQ,6BAEZ,IAAMC,EAAeC,OAAOC,WAqB5B,OApBA,SAAwBC,GACpB,IAAIC,EAA+C,GACnD,OAAQD,GACJ,IAAK,sBACDC,EAAkBC,YAAkBN,EAAUC,GAC9C,MACJ,IAAK,gBACD,IAAMM,EAAgBP,EACtBK,EAAkBG,YAAoBD,GACtC,MACJ,IAAK,sBACDF,EAAmB,qBAAKI,wBAAyB,CAAEC,OAAQV,EAASW,SACpE,MACJ,QACIN,EAAmB,mCAAGL,EAASW,QAEvC,OAAOV,EACA,qBAAKW,UAAU,oBAAoB,yBAAwBb,EAAS,mBAAiB,OAArF,SAA6FM,IAC9FA,CACT,CACMQ,CAAeb,EAASc,iBAClC,C,2ICjBKC,E,kDAEF,WAAYC,GAAmB,IAAD,8BAC1B,cAAMA,IAFVC,UAC8B,EAE1B,EAAKC,MAAL,eAAkBF,GAFQ,CAG7B,C,kDACD,SAAeG,GACX,OAAQ,qBAAKP,UAAU,uBAAf,SACJ,qBAAKA,UAAU,6CAA6CQ,MAAO,CAAEC,eAAgBF,EAAQG,gBAAgBX,OAA7G,SACI,qBAAKC,UAAS,mBAAcO,EAAQI,QAAQZ,MAA9B,YAAuCQ,EAAQK,OAAOb,OAChES,MAAO,CAAEK,MAAON,EAAQO,iBAAiBf,MAAOgB,UAAWR,EAAQS,wBAAwBjB,OAD/F,SAEKb,YAAY,UAAWqB,QAIvC,G,0BACD,SAAaU,GACT,OAAQ,qBAAKjB,UAAU,oBAAf,SACJ,uBAAOkB,UAAQ,EAACC,MAAI,EAACC,aAAW,EAACC,OAAK,EAACC,IAAKL,EAAUlB,MAAMwB,OAGnE,G,oBACD,WAAU,IAAD,EACL,EAA0DC,KAAKpB,MAAvDqB,EAAR,EAAQA,oBAAqBC,EAA7B,EAA6BA,gBAAiBnB,EAA9C,EAA8CA,QAE9C,OACI,sBAAKP,UAAU,aAAaQ,MAFlB,CAAEmB,cAAe,OAE3B,WACoB,OAAfD,QAAe,IAAfA,GAAA,UAAAA,EAAiB3B,aAAjB,eAAwBwB,MAEpB,qBAAKK,IAAK,SAACC,GAAD,OC7C2BC,ED6CgBD,GC7CjC1C,ED6Cc,oBC5ClC2C,GAGIxC,OAAOC,aAExBuC,EAAQC,aAAR,yBAA+C5C,GAC/C2C,EAAQC,aAAR,mBAAyC,SAEtC,IAPI,GAFA,IAA0B5C,EAAiB2C,CD6C3B,EAA+C9B,UAAU,oBAAoBQ,MAAO,CAAEkB,gBAAgB,QAAD,OAAUA,EAAgB3B,MAAMwB,IAAhC,SAEnHE,IAAwBC,GAAoBF,KAAKQ,aAAaP,GAC9DlB,GAAWiB,KAAKS,eAAe1B,KAI3C,K,GApCmB2B,aAsCT/B,W","file":"static/js/3.chunk.js?v=a39b7f6d","sourcesContent":["import { IContentDataBase } from '../models/base-common-model';\r\nimport { PropertyData } from '../models/property-data-model';\r\nimport {\r\n    renderComponentData,\r\n    renderContentArea,\r\n} from '../utils/component-renderer';\r\n\r\nexport default function PropertyFor(keyName: string, property: PropertyData) {\r\n    if (!keyName || !property) {\r\n        return (<></>)\r\n    }\r\n    const isInEditMode = window.isEditMode;\r\n    function renderProperty(type: string) {\r\n        let childrenElement: JSX.Element[] | JSX.Element = [];\r\n        switch (type) {\r\n            case 'PropertyContentArea':\r\n                childrenElement = renderContentArea(property, isInEditMode);\r\n                break;\r\n            case 'PropertyBlock':\r\n                const propertyBlock = property as unknown as IContentDataBase;\r\n                childrenElement = renderComponentData(propertyBlock);\r\n                break;\r\n            case 'PropertyXhtmlString':\r\n                childrenElement = (<div dangerouslySetInnerHTML={{ __html: property.value }}></div>);\r\n                break;\r\n            default:\r\n                childrenElement = (<>{property.value}</>);\r\n        }\r\n        return isInEditMode\r\n            ? (<div className=\"epi-editContainer\" data-epi-property-name={keyName} data-epi-use-mvc=\"True\">{childrenElement}</div>)\r\n            : childrenElement;\r\n    }\r\n    return renderProperty(property.propertyDataType);\r\n}\r\n\r\n","import './style.css';\r\n\r\nimport {\r\n    Component,\r\n    CSSProperties,\r\n    LegacyRef,\r\n} from 'react';\r\n\r\nimport EditAttributeFor from '../../HOCs/editattribute-component';\r\nimport PropertyFor from '../../HOCs/property-for-component';\r\nimport { CalloutBlockProp } from '../CalloutBlock/callout-model';\r\nimport {\r\n    HeroProps,\r\n    ReferencePropertyData,\r\n} from './hero-model';\r\n\r\nclass HeroBlock extends Component<HeroProps> {\r\n    hero: LegacyRef<HTMLDivElement> | undefined;\r\n    constructor(props: HeroProps) {\r\n        super(props);\r\n        this.state = { ...props };\r\n    }\r\n    _renderCallout(callout: CalloutBlockProp) {\r\n        return (<div className=\"screen-width-wrapper\">\r\n            <div className=\"hero-block__callout screen-width-container\" style={{ justifyContent: callout.calloutPosition.value }}>\r\n                <div className={`callout  ${callout.padding.value} ${callout.margin.value}`}\r\n                    style={{ color: callout.calloutTextColor.value, textAlign: callout.calloutContentAlignment.value }}>\r\n                    {PropertyFor(\"Callout\", callout)}\r\n                </div>\r\n            </div>\r\n        </div>)\r\n    }\r\n    _renderVideo(videoData: ReferencePropertyData) {\r\n        return (<div className=\"hero-block__video\">\r\n            <video autoPlay loop playsInline muted src={videoData.value.url}>\r\n            </video>\r\n        </div>)\r\n    }\r\n    render() {\r\n        const { mainBackgroundVideo, backgroundImage, callout } = this.props;\r\n        const style = { paddingBottom: '50%' } as CSSProperties;\r\n        return (\r\n            <div className=\"hero-block\" style={style}>\r\n                {backgroundImage?.value?.url\r\n                    &&\r\n                    (<div ref={(e) => EditAttributeFor(\"BackgroundImage\", e)} className=\"hero-block__image\" style={{ backgroundImage: `url('${backgroundImage.value.url}')` }}>\r\n                    </div>)}\r\n                {mainBackgroundVideo && !backgroundImage && (this._renderVideo(mainBackgroundVideo))}\r\n                {callout && this._renderCallout(callout)}\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default HeroBlock;\r\n","export default function EditAttributeFor(keyName: string, element: HTMLElement | null) {\r\n    if (!keyName || !element) {\r\n        return \"\"\r\n    }\r\n    const isInEditMode = window.isEditMode;\r\n    if (isInEditMode) {\r\n        element.setAttribute(`data-epi-property-name`, keyName);\r\n        element.setAttribute(`data-epi-use-mvc`, \"True\");\r\n    }\r\n    return \"\";\r\n}\r\n\r\n"],"sourceRoot":""}